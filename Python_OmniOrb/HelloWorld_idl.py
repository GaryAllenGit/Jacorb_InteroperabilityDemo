# Python stubs generated by omniidl from HelloWorld.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "HelloWorld"
#
__name__ = "HelloWorld"
_0_HelloWorld = omniORB.openModule("HelloWorld", r"HelloWorld.idl")
_0_HelloWorld__POA = omniORB.openModule("HelloWorld__POA", r"HelloWorld.idl")


# interface Hello
_0_HelloWorld._d_Hello = (omniORB.tcInternal.tv_objref, "IDL:HelloWorld/Hello:1.0", "Hello")
omniORB.typeMapping["IDL:HelloWorld/Hello:1.0"] = _0_HelloWorld._d_Hello
_0_HelloWorld.Hello = omniORB.newEmptyClass()
class Hello :
    _NP_RepositoryId = _0_HelloWorld._d_Hello[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_HelloWorld.Hello = Hello
_0_HelloWorld._tc_Hello = omniORB.tcInternal.createTypeCode(_0_HelloWorld._d_Hello)
omniORB.registerType(Hello._NP_RepositoryId, _0_HelloWorld._d_Hello, _0_HelloWorld._tc_Hello)

# Hello operations and attributes
Hello._d_hello_world = ((), ((omniORB.tcInternal.tv_string,0), ), None)

# Hello object reference
class _objref_Hello (CORBA.Object):
    _NP_RepositoryId = Hello._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def hello_world(self, *args):
        return self._obj.invoke("hello_world", _0_HelloWorld.Hello._d_hello_world, args)

omniORB.registerObjref(Hello._NP_RepositoryId, _objref_Hello)
_0_HelloWorld._objref_Hello = _objref_Hello
del Hello, _objref_Hello

# Hello skeleton
__name__ = "HelloWorld__POA"
class Hello (PortableServer.Servant):
    _NP_RepositoryId = _0_HelloWorld.Hello._NP_RepositoryId


    _omni_op_d = {"hello_world": _0_HelloWorld.Hello._d_hello_world}

Hello._omni_skeleton = Hello
_0_HelloWorld__POA.Hello = Hello
omniORB.registerSkeleton(Hello._NP_RepositoryId, Hello)
del Hello
__name__ = "HelloWorld"

#
# End of module "HelloWorld"
#
__name__ = "HelloWorld_idl"

_exported_modules = ( "HelloWorld", )

# The end.
