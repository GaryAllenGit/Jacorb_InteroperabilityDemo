#!/usr/bin/env python
# 
# This demo is based heavily on the "hello world" example code supplied
#     with the Fnorb Python ORB.
#
# This version was edited by Gary Allen October 2019 to make it
#     compatible with the omniorb Python/C++ Orb and interoperable
#     with the latest Java Jacorb demos
#
#

# Standard/built-in modules.
import sys

# Omniorb modules.
from omniORB import CORBA, PortableServer

# Stubs generated by 'omniorb'.
import HelloWorld


def main(argv):

    print 'Initialising the ORB...'

    # Initialise the ORB.
    orb = CORBA.ORB_init(sys.argv, CORBA.ORB_ID)

    # Read the server's stringified IOR from a file (this is just a 'cheap and
    # cheerful' way of locating the server - in practise the client would use
    # the naming or trader services).
    stringified_ior = open('server.ref').read()

    # Convert the stringified IOR into an active object reference.
    server_obj = orb.string_to_object(stringified_ior)

    # Narrow the reference, to make it active
    server = server_obj._narrow(HelloWorld.Hello)

    # Make sure that the server is not a 'nil object reference' (represented
    # in Python by the value 'None').
    if server is None:
        print "Object is not a Hello|World.Hello server"
        raise 'Nil object reference!'

    # Call the server.
    print server.hello_world()

    return 0

#############################################################################

if __name__ == '__main__':
    # Do it!
    sys.exit(main(sys.argv))

#############################################################################
